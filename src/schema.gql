# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: ID!
  username: String!
  firstname: String!
  lastname: String!
  email: String!
  password: String!
  status: String
  email_verified: Boolean!
  referrer: String
  walletId: String

  """User Level"""
  userLevel: Float!
  createdAt: String!
  updatedAt: String!
}

type GetUsersResponse {
  data: [User!]!
  totalUsers: Int!
}

type Wallet {
  id: ID!
  address: String!
  whithdrawAddress: String!
  userId: String!
  bnbBalance: Float!
  usdtBalance: Float!
  createdAt: String!
  updatedAt: String!
}

type WalletsAdmin {
  id: ID!
  username: String!
  address: String!
  whithdrawAddress: String!
  bnbBalance: Float!
  usdtBalance: Float!
  createdAt: String!
  updatedAt: String!
}

type GoogleOTP {
  id: ID!
  email: String!
  otpSecret: String!
  isOtpEnabled: Boolean!
  createdAt: String!
  updatedAt: String!
}

type GetAdminWalletsResponse {
  data: [WalletsAdmin!]!
  totalWallets: Int!
}

type Transaction {
  id: ID!
  type: String!
  amount: String!
  token: String!
  transactionHash: String!
  userId: String!
  walletId: String!
  createdAt: String!
  updatedAt: String!
}

type GenerateOtpOutput {
  qrCode: String!
  manualKey: String!
}

type WithdrawList {
  id: ID!
  email: String!
  currency: String!
  amount: Float!
  status: String!
  createdAt: String!
  updatedAt: String!
}

type PackageUsers {
  id: ID!
  userId: String!
  walletId: String
  packageType: String!
  quantity: Float!
  miningBalance: Float!
  createdAt: String!
  updatedAt: String!
}

type Contract {
  id: ID!
  content: [String!]!
  date: String!
  companyName: String!
  companyAddress: String!
  businessNumber: String!
  representative: String!
  customerName: String!
  customerPhone: String!
  customerAddress: String!
  userId: String!
  packageName: String!
  quantity: Float!
  totalPrice: Float!
  status: String!
  createdAt: String!
  updatedAt: String!
}

type DefaultContractTemplate {
  content: [String!]!
  date: String!
  companyName: String!
  companyAddress: String!
  businessNumber: String!
  representative: String!
}

type Package {
  id: ID!
  name: String!
  price: Float!
  miningProfit: Float!
  logInterval: Float!
  status: String!
  createdAt: String!
  updatedAt: String!
}

type GetPendingWithdrawalsResponse {
  id: ID!
  username: String!
  currency: String!
  amount: Float!
  createdAt: String!
  updatedAt: String!
}

type GetPendingWithdrawalsPaginatedResponse {
  data: [GetPendingWithdrawalsResponse!]!
  totalWithdrawals: Int!
}

type GetMiningCustomerResponse {
  id: ID!
  username: String!
  packageType: String!
  quantity: Float!
  miningBalance: Float!
  createdAt: String!
  updatedAt: String!
}

type GetMiningCustomersResponse {
  data: [GetMiningCustomerResponse!]!
  totalCustomers: Float!
}

type GetPendingContractsResponse {
  id: String!
  username: String!
  packageName: String!
  quantity: Int!
  totalPrice: Int!
  createdAt: String!
  updatedAt: String!
}

type GetPendingContractsPaginatedResponse {
  data: [GetPendingContractsResponse!]!
  totalContracts: Int!
}

type CoinPrice {
  id: ID!
  language: String!
  coinName: String!
  price: Float!
  createdAt: String!
  updatedAt: String!
}

type Query {
  getUserInfo: User!

  """Get users under my network"""
  getUsersUnderMyNetwork(limit: Int! = 10, page: Int! = 1): GetUsersResponse!
  getWalletInfo: Wallet!
  getWalletsAdmin(limit: Int! = 10, page: Int! = 1): GetAdminWalletsResponse!

  """Fetch all transactions for the user"""
  getTransactionList: [Transaction!]!
  getOtpInfo: GoogleOTP!
  getPackages: [Package!]!

  """Fetch mining customers with pagination for admin"""
  getMiningCustomers(limit: Int! = 10, page: Int! = 1): GetMiningCustomersResponse!
  getUserMiningData: [PackageUsers!]!
  getDefaultContract: DefaultContractTemplate!
  getPendingContractsAdmin(limit: Int! = 10, page: Int! = 1): GetPendingContractsPaginatedResponse!

  """Fetch all contracts for the user with an optional status filter"""
  getPackageRecords(status: String! = "approved"): [Contract!]!
  getPendingWithdrawalsAdmin(limit: Int! = 10, page: Int! = 1): GetPendingWithdrawalsPaginatedResponse!
  getPendingWithdrawals: [WithdrawList!]!
  getCoinPrice(coinName: String!, language: String!): CoinPrice
}

type Mutation {
  register(email: String!, username: String!, firstname: String!, lastname: String!, password: String!, referrer: String): String!
  login(email: String!, password: String!): String!

  """Update user details"""
  updateUser(userId: String!, username: String, firstname: String, lastname: String, email: String, status: String, referrer: String, userLevel: Int): String!
  createWallet: Wallet!
  saveWithdrawAddress(newAddress: String!, otp: String!): Boolean!

  """Update wallet details"""
  updateWallet(walletId: String!, whithdrawAddress: String, usdtBalance: Int): String!
  generateOTP: GenerateOtpOutput!
  verifyAndSaveOTP(otp: String!): Boolean!
  verifyOnlyOTP(otp: String!): Boolean!
  purchasePackage(packageId: String!, quantity: Int!, customerName: String!, customerPhone: String!, customerAddress: String!): String!
  confirmContract(contractId: String!, username: String!, packageName: String!, quantity: Int!): Boolean!
  requestWithdrawal(currency: String!, amount: Float!, otp: String!): Boolean!
  approveWithdrawal(withdrawalId: String!): Boolean!
  rejectWithdrawal(withdrawalId: String!, remarks: String): Boolean!
}